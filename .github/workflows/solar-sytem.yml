name: Solar System workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "feature/*"

env:
  MONGO_URI: "mongodb+srv://supercluster.d83jj.mongodb.net/superData"
  MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs-version: [18, 20]
        operating-system: [ubuntu-latest, macos-latest]
        exclude:
          - nodejs-version: 18
            operating-system: macos-latest
    runs-on: ${{matrix.operating-system}}
    continue-on-error: true
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - ${{matrix.nodejs-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.nodejs-version}}

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      
      - uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> 
        if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm install

      - name: Unit Testing
        id: nodejs-unit-testing-step
        run: npm test

      - name: Archive the test result
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: Mocha-Test-Result-${{matrix.nodejs-version}}-${{matrix.operating-system}}
          path: test-results.xml
          
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    
      - uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> 
        if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm install

      - name: Check Code Coverage
        run: npm run coverage
        continue-on-error: true

      - name: Archive Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 2
